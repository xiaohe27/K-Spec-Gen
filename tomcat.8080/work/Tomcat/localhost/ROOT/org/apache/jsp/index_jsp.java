/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-12-09 02:56:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link href=\"google-code-prettify/prettify.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n");
      out.write("    <script type=\"text/javascript\" src=\"google-code-prettify/prettify.js\"></script>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("    function loadXMLDoc(myURL) {\r\n");
      out.write("        if (myURL == \"\")\r\n");
      out.write("            return;\r\n");
      out.write("        var xmlhttp;\r\n");
      out.write("        if (window.XMLHttpRequest) {\r\n");
      out.write("            xmlhttp = new XMLHttpRequest();\r\n");
      out.write("        } else {\r\n");
      out.write("            // code for older browsers\r\n");
      out.write("            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("        }\r\n");
      out.write("        xmlhttp.onreadystatechange = function() {\r\n");
      out.write("            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n");
      out.write("                document.getElementById(\"code\").value = xmlhttp.responseText;\r\n");
      out.write("                document.getElementById(\"javacode\").innerHTML =\r\n");
      out.write("                        xmlhttp.responseText;\r\n");
      out.write("                document.getElementById(\"javablock\").className = \"prettyprint\";\r\n");
      out.write("                prettyPrint();\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        xmlhttp.open(\"GET\", myURL, true);\r\n");
      out.write("        xmlhttp.send();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>Online K spec generator</h2>\r\n");
      out.write("\r\n");
      out.write("<form action=\"HelloServlet\" method=\"GET\" onsubmit=\"setContent()\">\r\n");
      out.write("    <select onchange=\"loadXMLDoc(this.value)\">\r\n");
      out.write("        <option value=\"\" selected=\"selected\"></option>\r\n");
      out.write("        <option\r\n");
      out.write("                value=\"https://raw.githubusercontent.com/xiaohe27/K-Spec-Gen/master/KSpecGen/examples/bst/bst.java\">\r\n");
      out.write("            bst.java\r\n");
      out.write("        </option>\r\n");
      out.write("        <option\r\n");
      out.write("                value=\"https://raw.githubusercontent.com/xiaohe27/K-Spec-Gen/master/KSpecGen/examples/list/listNode.java\">\r\n");
      out.write("            listNode.java\r\n");
      out.write("        </option>\r\n");
      out.write("\r\n");
      out.write("        <option value=\"https://raw.githubusercontent.com/xiaohe27/K-Spec-Gen/master/KSpecGen/examples/min/min.java\">min.java</option>\r\n");
      out.write("\r\n");
      out.write("        <option\r\n");
      out.write("                value=\"https://raw.githubusercontent.com/xiaohe27/K-Spec-Gen/master/KSpecGen/examples/sum/sum.java\">\r\n");
      out.write("            sum.java\r\n");
      out.write("        </option>\r\n");
      out.write("    </select>\r\n");
      out.write("\r\n");
      out.write("    <br/>\r\n");
      out.write("    <div><span><pre class=\"prettyprint\" id=\"javablock\">\r\n");
      out.write("<font size=\"5\">\r\n");
      out.write("    <code style=\"align-content: space-between\" class=\"language-java\" id=\"javacode\">\r\n");
      out.write("<textarea style=\"height: 15cm; width: 35cm\" wrap=\"hard\" id=\"pgmText\" ondblclick=\"this.value = ''\">\r\n");
      out.write("    Type your program here or choose an existing example from the left hand side popup menu.\r\n");
      out.write("</textarea>\r\n");
      out.write("    </code>\r\n");
      out.write("</font>\r\n");
      out.write("\r\n");
      out.write("</pre></span></div>\r\n");
      out.write("\r\n");
      out.write("    <input id=\"code\" name=\"content\" value=\"\" hidden/>\r\n");
      out.write("\r\n");
      out.write("    <br/>\r\n");
      out.write("    <input type=\"submit\" value=\"!Submit!\"/>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function setContent() {\r\n");
      out.write("        if (document.getElementById(\"pgmText\") != null) {\r\n");
      out.write("            document.getElementById(\"code\").value =\r\n");
      out.write("                    document.getElementById(\"pgmText\").value;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
