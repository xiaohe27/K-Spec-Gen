// Copyright (c) 2014 K Team. All Rights Reserved.
public class listNode {
  int val;
  listNode next;

    listNode (int val)
    {
        this.val = val;
        this.next = null;
    }

    public static void main(String[] args) {
        listNode node1 = new listNode (1);
        listNode node2 = new listNode (2);
        listNode node3 = new listNode (3);
        node1.next = node2;
    }


static listNode reverse(listNode x)
/*@ rule <k> $ => return ?p; ...</k>
         <heap>... list(x)(A) => list(?p)(rev(A)) ...</heap> */
{
  listNode p;

  p = null;
  //@ inv <heap>... list(p)(?B), list(x)(?C) ...</heap> /\ A = rev(?B) @ ?C
  while(x != null) {
    listNode y;

    y = x.next;
    x.next = p;
    p = x;
    x = y;
  }

  return p;
}
}

